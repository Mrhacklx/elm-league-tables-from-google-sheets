maybe add a test in update where the test uses the calculate function

add test for order of results fixtures (descending date, unscheduled go last)
- done

add test for ordering of a real date and a nothing date

add test for order of results / fixtures within a day

look out for places I should have used the accessor type alias functions and use them

update the  update tests for old update code
delete the old update code
maybe remove LeagueGames from main model? might be handy to keep it though, for later plan to not call the api so much.

delete my date.format


The UI doesn't look right yet, and doesn't contain headers 
for each date. I need to update the end to end test to require
this

I can now remove LeagueGames from Model. Not sure if 
this is the right thing to do or not. It might be handy later
when I reduce the calls to the Api.

I need to check the existing ResultsFixtures update tests to
see if they still make sense


there is an end to end, with
- one result
- one fixture with a date
- one fixture without a date

change test to require date elements
could put the date in the data-test attribute so checking works
date elements need to contain fixtures probably, I think thats fine
ones without a date go last, although test probably can't check thats
- text to be "Unscheduled" for these
